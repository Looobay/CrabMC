name: Nightly Build

on:
  schedule:
    # Fire every day at 22:00pm UTC
    - cron: "0 22 * * *"
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build
        run: cargo build --release
      - name: Archive Binaries
        run: |
          mkdir -p artifacts
          cp target/release/CrabMC artifacts/CrabMC-linux
          tar -czf artifacts/CrabMC-linux.tar.gz -C artifacts CrabMC-linux
      - name: Upload Binaries as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-binaries
          path: artifacts/CrabMC-linux.tar.gz

  build-macos:
    runs-on: macos-latest
    needs: build-linux
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build
        run: cargo build --release
      - name: Archive Binaries
        run: |
          mkdir -p artifacts
          cp target/release/CrabMC artifacts/CrabMC-macos
          tar -czf artifacts/CrabMC-macos.tar.gz -C artifacts CrabMC-macos
      - name: Upload Binaries as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-binaries
          path: artifacts/CrabMC-macos.tar.gz

  build-windows:
    runs-on: windows-latest
    needs: build-linux
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build
        run: cargo build --release
      - name: Archive Binaries
        run: |
          mkdir -p artifacts
          copy target\\release\\CrabMC.exe artifacts\\CrabMC.exe
          tar -czf artifacts/CrabMC-windows.tar.gz -C artifacts CrabMC.exe
      - name: Upload Binaries as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-binaries
          path: artifacts/CrabMC-windows.tar.gz

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos, build-windows]
    permissions:
      contents: write
      id-token: write
      actions: write
    steps:
      - name: Get current date
        id: date
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly-${{ env.DATE }}
          release_name: Nightly ${{ env.DATE }}
          body: |
            This is the nightly release of CrabMC from ${{ env.DATE }}.
            Enjoy the latest features!

            **Warning: Experimental software, not for production use!**
            
            **The software is under the Mozilla Public License 2.0 (https://www.mozilla.org/en-US/MPL/2.0/)**

            - Linux and macOS users: Run with `sudo` for proper file permissions.
            - macOS: If blocked by security, allow the program in your settings.

          draft: false
          prerelease: true

      - name: Debug Upload URL
        run: echo "Upload URL ${{ steps.create_release.outputs.upload_url }}"

      - name: Download Linux Binaries
        uses: actions/download-artifact@v3
        with:
          name: linux-binaries
          path: ./linux-binaries

      - name: Download macOS Binaries
        uses: actions/download-artifact@v3
        with:
          name: macos-binaries
          path: ./macos-binaries

      - name: Download Windows Binaries
        uses: actions/download-artifact@v3
        with:
          name: windows-binaries
          path: ./windows-binaries

      - name: Upload Linux Binary to Release
        uses: svenstaro/upload-release-action@v2 # Utilise une action plus Ã  jour pour upload les assets
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-binaries/CrabMC-linux.tar.gz
          asset_name: CrabMC-linux.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS Binary to Release
        uses: svenstaro/upload-release-action@v2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos-binaries/CrabMC-macos.tar.gz
          asset_name: CrabMC-macos.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows Binary to Release
        uses: svenstaro/upload-release-action@v2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-binaries/CrabMC-windows.tar.gz
          asset_name: CrabMC-windows.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
