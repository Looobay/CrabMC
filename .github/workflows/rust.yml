name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Archive Binaries
        run: |
          mkdir -p artifacts
          cp target/debug/CraftMC
      - name: Upload Binaries as Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: artifacts/

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
      id-token: write
      actions: write
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: auto-release-${{ steps.date.outputs.date }}.${{ github.run_number }}
          release_name: Auto Release ${{ steps.date.outputs.date }}.${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Download Binaries from Build Job
        uses: actions/download-artifact@v3
        with:
          name: binaries
      - name: Upload Binaries to Release
        uses: actions/upload-release-asset@v1.0.1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/CrabMC
          asset_name: CrabMC
          asset_content_type: application/octet-stream
        # Repeat the above step for each binary you want to upload, modifying `asset_name` and `asset_path` accordingly
