name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --release
      - name: Archive Binaries
        run: |
          mkdir -p artifacts
          cp target/release/CrabMC artifacts/CrabMC-linux
      - name: Upload Binaries as Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-binaries
          path: artifacts/

  build-macos:
    runs-on: macos-latest
    needs: build-linux
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --release
      - name: Archive Binaries
        run: |
          mkdir -p artifacts
          cp target/release/CrabMC artifacts/CrabMC-macos
      - name: Upload Binaries as Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-binaries
          path: artifacts/

  build-windows:
    runs-on: windows-latest
    needs: build-linux
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --release
      - name: Archive Binaries
        run: |
          mkdir -p artifacts
          cp target/release/CrabMC.exe artifacts/CrabMC.exe
      - name: Upload Binaries as Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-binaries
          path: artifacts/

  release:
    runs-on: ubuntu-latest
    needs: [ build-linux, build-macos, build-windows ]
    permissions:
      contents: write
      id-token: write
      actions: write
    steps:
      - name: Get current date
        id: date
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: auto-release-${{ env.DATE }}.${{ github.run_number }}
          release_name: Auto Release ${{ env.DATE }}.${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Debug Upload URL
        run: echo "Upload URL ${{ steps.create_release.outputs.upload_url }}"

      - name: Download Linux Binaries from Build Job
        uses: actions/download-artifact@v3
        with:
          name: linux-binaries
          path: ./linux-binaries

      - name: Download macOS Binaries from Build Job
        uses: actions/download-artifact@v3
        with:
          name: macos-binaries
          path: ./macos-binaries

      - name: Download Windows Binaries from Build Job
        uses: actions/download-artifact@v3
        with:
          name: windows-binaries
          path: ./windows-binaries

      - name: Upload Linux Binary to Release
        uses: actions/upload-release-asset@v1.0.1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-binaries/CrabMC-linux
          asset_name: CrabMC-linux
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS Binary to Release
        uses: actions/upload-release-asset@v1.0.1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos-binaries/CrabMC-macos
          asset_name: CrabMC-macos
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows Binary to Release
        uses: actions/upload-release-asset@v1.0.1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-binaries/CrabMC.exe
          asset_name: CrabMC.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}